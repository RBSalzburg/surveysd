% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recalib.R
\name{recalib}
\alias{recalib}
\title{Calibrate weights}
\usage{
recalib(dat, hid = "hid", weights = "hgew", b.rep = paste0("w", 1:1000),
  year = "jahr", conP.var = c("ksex", "kausl", "al", "erw", "pension"),
  conH.var = c("bundesld", "hsize", "recht"), ...)
}
\arguments{
\item{dat}{either data.frame or data.table containing the sample survey for various years.}

\item{hid}{character specifying the name of the column in \code{dat} containing the household ID.}

\item{weights}{character specifying the name of the column in \code{dat} containing the sample weights.}

\item{b.rep}{character specifying the names of the columns in \code{dat} containing bootstrap weights which should be recalibratet}

\item{year}{character specifying the name of the column in \code{dat} containing the sample years.}

\item{conP.var}{character vector containig person-specific variables to which weights should be calibrated. for which contingency tables for the population tables are calculatet per \code{year} and}

\item{conH.var}{character vector containig household-specific variables to which weights should be calibrated.}

\item{...}{additional arguments passed on to function \code{\link[simpPop]{ipu2}} from the \code{simPop} package.}
}
\value{
Returns a data.table containing the survey data as well as the calibrated weights for the bootstrap replicates, which are labeled like the bootstrap replicates.
}
\description{
Calibrate weights for bootstrap replicates by using iterative proportional updating to match population totals on various household and personal levels.
}
\details{
\code{recalib} takes survey data (\code{dat}) containing the bootstrap replicates generated by \code{\link{bootstrap.rep}} and calibrates weights for each bootstrap
replication according to population totals for person- or household-specific variables. \cr
\code{dat} must be household data where household members correspond to multiple rows with the same household identifier. The data should at least containt the following columns:
\itemize{
  \item Column indicating the sample year;
  \item Column indicating the household ID;
  \item Column containing the household sample weights;
  \item Columns which contain the bootstrap replicates (see output of \code{\link{bootstrap.rep}});
  \item Columns indicating person- or household-specific variables for which sample weight should be adjusted.
}
For each year and each variable in \code{conP.var} and/or \code{conH.var} contingency tables are estimated to get margin totals on personal- and/or household-specific variables in the population.\cr
Afterwards the bootstrap replicates are multiplied with the original sample weight and the resulting product ist then adjusted using \code{\link[simpPop]{ipu2}} to match the previously calcualted contingency tables.
In this process the columns of the bootstrap replicates are overwritten by the calibrated weights.\cr
}
\examples{
# read in data (need to be changed)
library(data.table)
dat <- data.table(read_sas("O:/B/3-AP/Analyse/sonstiges/
                            bundesländerschätzungen 2008-2018/daten/bldaten0816.sas7bdat"))
# draw bootstrap replicates
dat <- bootstrap.rep(dat,REP=20,hid="hid",weights="hgew",
                     strata="bundesld",year="jahr",totals=NULL,boot.names=NULL)

# or load data with replicates if they have already been saved
# load("dat_replicates.RData")

# calibrate weight for bootstrap replicates
# use sex for person-specific and hsize for household-specific marginals
dat_calib <- recalib(dat=copy(dat),hid="hid",weights="hgew",b.weights=paste0("w",1:20),
                     year="jahr",conP.var=c("sex"),conH.var=c("hsize"))


# do the same but expand person- and household specific variables
dat_calib <- recalib(dat=copy(dat),hid="hid",weights="hgew",b.weights=paste0("w",1:20),
                     year="jahr",conP.var=c("sex","ageX"),conH.var=c("bundesld","hsize"))


# for many variables (household- or person-specific)
# use increase maxIter to get convergence
dat_calib <- recalib(dat=copy(dat),hid="hid",weights="hgew",b.weights=paste0("w",1:20),
                     year="jahr",conP.var=c("ksex","age","bildung","kausl","al","erw","pension"),
                     conH.var=c("bundesld","hsize","recht"),maxIter=100)

# save calibrated bootstrap weights as .RData
save(dat_calib,file="dat_calibweight.RData")
# or .csv-file
write.csv2(dat_calib,file="dat_calibweight.csv",row.names=FALSE)

}
\seealso{
\code{\link[simpPop]{ipu2}} for more information on iterative proportional fitting.
}
\author{
Johannes Gussenbauer, Alexander Kowarik, Statistics Austria
}
